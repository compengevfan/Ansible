---
# tasks file for ConfigureWindows
- name: Make sure ServerName is all upper
  set_fact: ServerNameUpper="{{ ServerName | upper }}"
  when: ServerNameUpper is not defined

- name: Obtain Windows License Keys
  include_role:
    name: GetVaultCreds
  vars:
    includecred:
      - licensekeys

- name: Get VM Info
  include_role:
    name: GitGetVmInfo
  vars:
    ServerName: "{{ ServerName }}"
  when: VmFileContents_JSON is not defined

- name: Get Config Info
  include_role:
    name: GitConfigInfo
  vars:
    Config: "{{ VmFileContents_JSON.VMInfo.Network }}"
  when: ConfigFileContents_JSON is not defined

- name: Obtain Credentials
  include_role:
    name: GetVaultCreds
  vars:
    includecred:
      - windowslocaladmin
      - evoriginda

- name: Add server to configure to temp inventory
  add_host:
    name: "{{ ServerNameUpper }}.{{ ConfigFileContents_JSON.Domain }}"
    groups: windowsconfigure
    ansible_user: "{{ windowslocaladmin_cred.username }}"
    ansible_password: "{{ windowslocaladmin_cred.password }}"
    ansible_connection: winrm
    ansible_port: 5985
    ansible_winrm_transport: ntlm
  no_log: true

- name: Set timezone
  win_shell: Set-TimeZone -Id "Eastern Standard Time"
  delegate_to: "{{ ServerNameUpper }}.{{ ConfigFileContents_JSON.Domain }}"

- name: Determine if windows is activated
  win_shell: |
    $LicenseInfo = Get-CimInstance SoftwareLicensingProduct -Filter "Name like 'Windows%'" | where { $_.PartialProductKey } | select Description, LicenseStatus
    $LicenseInfo.LicenseStatus
  delegate_to: "{{ ServerNameUpper }}.{{ ConfigFileContents_JSON.Domain }}"
  register: LicenseCheck

- name: What am I getting?
  debug:
    var: licensekeys.ServerNameUpper

# - name: Update license key
#   win_shell: "DISM /Online /Set-Edition:ServerStandard /ProductKey:{{ licensekey.key }} /AcceptEula /Quiet"
#   delegate_to: "{{ ServerNameUpper }}.{{ ConfigFileContents_JSON.Domain }}"