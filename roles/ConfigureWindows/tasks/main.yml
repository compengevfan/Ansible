---
# tasks file for ConfigureWindows
- name: Make sure ServerName is all upper
  set_fact: ServerNameUpper="{{ ServerName | upper }}"
  when: ServerNameUpper is not defined

- name: Get VM Info
  include_role:
    name: GitGetVmInfo
  vars:
    ServerName: "{{ ServerName }}"
  when: VmFileContents_JSON is not defined

- name: Get Config Info
  include_role:
    name: GitConfigInfo
  vars:
    Config: "{{ VmFileContents_JSON.VMInfo.Network }}"
  when: ConfigFileContents_JSON is not defined

- name: Obtain Credentials
  include_role:
    name: GetVaultCreds
  vars:
    includecred:
      - windowslocaladmin
      - evoriginda

- name: Add server to configure to temp inventory
  add_host:
    name: "{{ ServerNameUpper }}.{{ ConfigFileContents_JSON.Domain }}"
    groups: windowsconfigure
    ansible_user: "{{ windowslocaladmin_cred.username }}"
    ansible_password: "{{ windowslocaladmin_cred.password }}"
    ansible_connection: winrm
    ansible_port: 5985
    ansible_winrm_transport: ntlm
  no_log: true

- name: Set timezone
  win_shell: Set-TimeZone -Id "Eastern Standard Time"
  delegate_to: "{{ ServerNameUpper }}.{{ ConfigFileContents_JSON.Domain }}"

- name: Set execution policy
  win_shell: |
    $ExecPolicy = Get-ExecutionPolicy
    if ($Execpolicy -ne "Unrestricted"){
      Write-Output "Setting Execution Policy to Unrestricted."
      Set-ExecutionPolicy -ExecutionPolicy Undefined -Scope LocalMachine -Force
    }
    else { Write-Output "Execution Policy already set to Unrestricted." }
  delegate_to: "{{ ServerNameUpper }}.{{ ConfigFileContents_JSON.Domain }}"

# - name: Install Chocolatey
#   win_shell: |
#     [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
#     iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
#   delegate_to: "{{ ServerNameUpper }}.{{ ConfigFileContents_JSON.Domain }}"