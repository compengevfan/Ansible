---
# tasks file for BuildVM
- name: Obtain Credentials
  include_role:
    name: GetVaultCreds
  vars:
    includecred:
      - netbox
      - vcenter

# - name: Show me the contents
#   debug:
#     msg: "{{ netbox_cred }}"

- name: Get VM Info from Netbox API
  ansible.builtin.uri:
    url: "{{ netbox_cred.url }}/api/virtualization/virtual-machines?name={{ ServerName | upper }}"
    headers:
      Content-Type: application/json
      Authorization: "{{ netbox_cred.api_token }}"
    validate_certs: no
  register: vmInfoApi

- name: Get Template Name API
  ansible.builtin.uri:
    url: "{{ netbox_cred.url }}/api/dcim/platforms/{{ vmInfo.json.results[0].platform.id }}/"
    headers:
      Content-Type: application/json
      Authorization: "{{ netbox_cred.api_token }}"
    validate_certs: no
  register: platform

- name: Get Prefix API
  ansible.builtin.uri:
    url: "{{ netbox_cred.url }}/api/ipam/prefixes?contains={{ vmInfo.json.results[0].primary_ip.address.split('/')[0] }}"
    headers:
      Content-Type: application/json
      Authorization: "{{ netbox_cred.api_token }}"
    validate_certs: no
  register: prefix

- name: Get Subnet from API output
  script: Subnet.py {{ vmInfo.json.results[0].primary_ip.address.split('/')[1] }}
  args: 
    executable: /usr/bin/python
  register: subnetReturn
  delegate_to: localhost

# - name: Show me the contents
#   debug:
#     msg: "{{ vmInfo.json.results[0].primary_ip.address.split('/')[1] }}"

# - name: Clone a virtual machine from Windows template and customize
#   community.vmware.vmware_guest:
#     hostname: "{{ vcenter_cred.servername }}"
#     username: "{{ vcenter_cred.username }}"
#     password: "{{ vcenter_cred.password }}"
#     datacenter: datacenter1
#     cluster: cluster
#     name: {{ ServerName }}
#     template: "{{ platform.json.custom_fields.VM_Template }}"
#     networks:
#     - name: VM Network
#       ip: {{ vmInfo.json.results[0].primary_ip.address.split('/')[0] }}
#       netmask: "{{ subnetReturn }}"
#       gateway: 192.168.1.1
#       mac: aa:bb:dd:aa:00:14
#       domain: my_domain
#       dns_servers:
#       - 192.168.1.1
#       - 192.168.1.2
#     customization:
#       autologon: true
#       dns_servers:
#       - 192.168.1.1
#       - 192.168.1.2
#       domain: my_domain
#       password: new_vm_password
#       runonce:
#       - powershell.exe -ExecutionPolicy Unrestricted -File C:\Windows\Temp\ConfigureRemotingForAnsible.ps1 -ForceNewSSLCert -EnableCredSSP
#   delegate_to: localhost

# - name:  Clone a virtual machine from Linux template and customize
#   community.vmware.vmware_guest:
#     hostname: "{{ vcenter_cred.servername }}"
#     username: "{{ vcenter_cred.username }}"
#     password: "{{ vcenter_cred.password }}"
#     datacenter: "{{ datacenter }}"
#     state: present
#     folder: /DC1/vm
#     template: "{{ platform.json.custom_fields.VM_Template }}"
#     name: "{{ ServerName }}"
#     cluster: DC1_C1
#     networks:
#       - name: "{{ prefix.json.results[0].custom_fields.Port_Group }}"
#         ip: "{{ vmInfo.json.results[0].primary_ip.address.split('/')[0] }}
#         netmask: "{{ subnetReturn }}"
#     wait_for_ip_address: true
#     customization:
#       domain: "{{ guest_domain }}"
#       dns_servers:
#         - 8.9.9.9
#         - 7.8.8.9
#       dns_suffix:
#         - example.com
#         - example2.com
#       script_text: |
#         #!/bin/bash
#         touch /tmp/touch-from-playbook
#   delegate_to: localhost