---
# tasks file for NetboxAddVM
- name: Make sure ServerName is all upper
  set_fact: ServerNameUpper="{{ ServerName | upper }}"

- name: Get VM Info
  include_role:
    name: GitGetVmInfo
  vars:
    ServerName: "{{ ServerName }}"
  when: VmFileContents_JSON is not defined

- name: Get Config Info
  include_role:
    name: GitConfigInfo
  vars:
    Config: "{{ VmFileContents_JSON.VMInfo.Network }}"
  when: ConfigFileContents_JSON is not defined

- name: Create VM
  netbox.netbox.netbox_virtual_machine:
    netbox_url: "{{ netbox_cred.url }}"
    netbox_token: "{{ netbox_cred.token }}"
    data:
      name: "{{ ServerNameUpper }}"
      site: Amberly
      vcpus: "{{ VmFileContents_JSON.VMInfo.vCPUs | int }}"
      memory: "{{ VmFileContents_JSON.VMInfo.RAM | int * 1024 }}"
      platform: "{{ VmFileContents_JSON.VMInfo.OperatingSystem }}"
      cluster: "{{ ConfigFileContents_JSON.Cluster }}"
      custom_fields:
        Datastore: "{{ VmFileContents_JSON.VMInfo.Datastore }}"
        OU: "{{ VmFileContents_JSON.VMInfo.OU }}"
    state: present
    validate_certs: no
  register: VirtualMachine

- name: Create the interface
  netbox.netbox.netbox_vm_interface:
    netbox_url: "{{ netbox_cred.url }}"
    netbox_token: "{{ netbox_cred.token }}"
    data:
      virtual_machine: "{{ ServerNameUpper }}"
      name: eth1
      enabled: true
    state: present
    validate_certs: no

- name: Assign IP if one is provided
  netbox.netbox.netbox_ip_address:
    netbox_url: "{{ netbox_cred.url }}"
    netbox_token: "{{ netbox_cred.token }}"
    data:
      address: "{{ VmFileContents_JSON.VMInfo.IPAddress }}"
      dns_name: "{{ ServerNameUpper }}.{{ ConfigFileContents_JSON.Domain }}"
      assigned_object: 
        name: eth1
        virtual_machine: "{{ ServerNameUpper }}"
    state: present
    validate_certs: no
  when: VmFileContents_JSON.VMInfo.IPAddress != None

- name: Get a free IP and assign it if one is not provided
  block: 
    - name: Find the prefix
      ansible.builtin.uri:
        url: "{{ netbox_cred.url }}/api/ipam/prefixes?prefix={{ ConfigFileContents_JSON.Subnet }}"
        headers:
          Content-Type: application/json
          Authorization: "{{ netbox_cred.api_token }}"
        validate_certs: no
      register: prefix

    - name: Get the available IPs in the prefix
      ansible.builtin.uri:
        url: "{{ netbox_cred.url }}/api/ipam/prefixes/{{ prefix.json.results[0].id }}/available-ips/"
        headers:
          Content-Type: application/json
          Authorization: "{{ netbox_cred.api_token }}"
        validate_certs: no
      register: availableIps

    - name: Create an IP address
      netbox.netbox.netbox_ip_address:
        netbox_url: "{{ netbox_cred.url }}"
        netbox_token: "{{ netbox_cred.token }}"
        data:
          address: "{{ availableIps.json[0].address }}"
          dns_name: "{{ ServerNameUpper }}.{{ ConfigFileContents_JSON.Domain }}"
          assigned_object: 
            name: eth1
            virtual_machine: "{{ ServerNameUpper }}"
        state: present
        validate_certs: no

    - name: Set IP as primary
      netbox.netbox.netbox_virtual_machine:
        netbox_url: "{{ netbox_cred.url }}"
        netbox_token: "{{ netbox_cred.token }}"
        data:
          name: "{{ ServerNameUpper }}"
          site: Amberly
          cluster: C1
          primary_ip4: "{{ availableIps.json[0].address.split('/')[0] }}"
        state: present
        validate_certs: no

    - name: Call the role to add IP to DNS
      include_role:
        name: CreateDnsARecord
      vars:
        IpAddress: "{{ availableIps.json[0].address.split('/')[0] }}"
        Domain: "{{ ConfigFileContents_JSON.Domain }}"
  when: VirtualMachine.virtual_machine.primary_ip == None
